<?php
http_response_code(418,"I'M A TEAPOT");
header('x-powered-by: TYX_DSLang(NotPHP)');
header('server: TYX_Server/0.233');

if ($_SERVER['REQUEST_METHOD'] == "BREW" || $_SERVER['REQUEST_METHOD'] == "brew") {
	print "Here is your tea: flag{delivering_tea_to_DaLa0}";
	return;
}
else if ($_SERVER['REQUEST_METHOD'] == "WHEN" || $_SERVER['REQUEST_METHOD'] == "when") {
	print "I'm NOT a coffee pot. Please read RFC-7168, not RFC-2324.";
	return;
}
else if ($_SERVER['REQUEST_METHOD'] == "POST" || $_SERVER['REQUEST_METHOD'] == "post") {
	print "The method POST is deprecated. Try using other methods to request this page.";
	return;
}

if (isset($_GET['key'])){
	if ($_GET['key'] == "teapot" || $_GET['key'] == "TEAPOT"){
	    header('Content-type: document');
		print "The flag is: flag{i_prEfeR_c0ffEE_m0rE_than_tEa}\n\r";
		print "Independent Submission                                          I. Nazar\n\rRequest for Comments: 7168                                  1 April 2014\n\rUpdates: 2324\n\rCategory: Informational\n\rISSN: 2070-1721\n\r\n\r               The Hyper Text Coffee Pot Control Protocol\n\r                 for Tea Efflux Appliances (HTCPCP-TEA)\n\r\n\rAbstract\n\r\n\r   The Hyper Text Coffee Pot Control Protocol (HTCPCP) specification\n\r   does not allow for the brewing of tea, in all its variety and\n\r   complexity.  This paper outlines an extension to HTCPCP to allow for\n\r   pots to provide networked tea-brewing facilities.\n\r\n\rStatus of This Memo\n\r\n\r   This document is not an Internet Standards Track specification; it is\n\r   published for informational purposes.\n\r\n\r   This is a contribution to the RFC Series, independently of any other\n\r   RFC stream.  The RFC Editor has chosen to publish this document at\n\r   its discretion and makes no statement about its value for\n\r   implementation or deployment.  Documents approved for publication by\n\r   the RFC Editor are not a candidate for any level of Internet\n\r   Standard; see Section 2 of RFC 5741.\n\r\n\r   Information about the current status of this document, any errata,\n\r   and how to provide feedback on it may be obtained at\n\r   http://www.rfc-editor.org/info/rfc7168.\n\r\n\rCopyright Notice\n\r\n\r   Copyright (c) 2014 IETF Trust and the persons identified as the\n\r   document authors.  All rights reserved.\n\r\n\r   This document is subject to BCP 78 and the IETF Trust\"s Legal\n\r   Provisions Relating to IETF Documents\n\r   (http://trustee.ietf.org/license-info) in effect on the date of\n\r   publication of this document.  Please review these documents\n\r   carefully, as they describe your rights and restrictions with respect\n\r   to this document.\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\rNazar                         Informational                     [Page 1]\n\r\n\rRFC 7168                       HTCPCP-TEA                   1 April 2014\n\r\n\r\n\rTable of Contents\n\r\n\r   1. Introduction  . . . . . . . . . . . . . . . . . . . . . . . . .  2\n\r     1.1. Terminology . . . . . . . . . . . . . . . . . . . . . . . .  3\n\r   2. HTCPCP-TEA Protocol Additions . . . . . . . . . . . . . . . . .  3\n\r     2.1. BREW and POST Methods . . . . . . . . . . . . . . . . . . .  3\n\r       2.1.1. The \"/\" URI . . . . . . . . . . . . . . . . . . . . . .  3\n\r       2.1.2. Variety-Specific URIs . . . . . . . . . . . . . . . . .  4\n\r     2.2. Modified Header Fields  . . . . . . . . . . . . . . . . . .  4\n\r       2.2.1. The Accept-Additions Header Field . . . . . . . . . . .  4\n\r     2.3. Response Codes  . . . . . . . . . . . . . . . . . . . . . .  5\n\r       2.3.1. 300 Multiple Options  . . . . . . . . . . . . . . . . .  5\n\r       2.3.2. 403 Forbidden . . . . . . . . . . . . . . . . . . . . .  5\n\r       2.3.3. 418 I\"m a Teapot  . . . . . . . . . . . . . . . . . . .  5\n\r   3. The \"message/teapot\" Media Type . . . . . . . . . . . . . . . .  6\n\r   4. Environmental Considerations  . . . . . . . . . . . . . . . . .  6\n\r   5. Security Considerations . . . . . . . . . . . . . . . . . . . .  6\n\r   6. Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . .  7\n\r   7. References  . . . . . . . . . . . . . . . . . . . . . . . . . .  7\n\r     7.1. Normative References  . . . . . . . . . . . . . . . . . . .  7\n\r     7.2. Informative References  . . . . . . . . . . . . . . . . . .  7\n\r\n\r1.  Introduction\n\r\n\r   As noted in the Hyper Text Coffee Pot Control Protocol [HTCPCP],\n\r   coffee is renowned worldwide as an artfully brewed caffeinated\n\r   beverage, but coffee shares this quality with many other varied\n\r   preparations based on the filtration of plant material.  Foremost,\n\r   among these are the category of brews based on the straining of water\n\r   through prepared leaves from a tea tree: the lineage and history of\n\r   the tea genus will not be recounted as part of this paper, but\n\r   evidence shows that the production of tea existed many thousands of\n\r   years ago.\n\r\n\r   The deficiency of HTCPCP in addressing the networked production of\n\r   such a venerable beverage as tea is noteworthy: indeed, the only\n\r   provision given for networked teapots is that they not respond to\n\r   requests for the production of coffee, which, while eminently\n\r   reasonable, does not allow for communication with the teapot for its\n\r   intended purpose.\n\r\n\r   This paper specifies an extension to HTCPCP to allow communication\n\r   with networked tea production devices and teapots.  The additions to\n\r   the protocol specified herein permit the requests and responses\n\r   necessary to control all devices capable of making, arguably, the\n\r   most popular caffeinated hot beverage.\n\r\n\r\n\r\n\r\n\r\n\rNazar                         Informational                     [Page 2]\n\r\n\rRFC 7168                       HTCPCP-TEA                   1 April 2014\n\r\n\r\n\r1.1.  Terminology\n\r\n\r   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n\r   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n\r   document are to be interpreted as described in RFC 2119 [KEYWORDS].\n\r\n\r2.  HTCPCP-TEA Protocol Additions\n\r\n\r   The TEA extension to HTCPCP adapts the operation of certain HTCPCP\n\r   methods.\n\r\n\r2.1.  BREW and POST Methods\n\r\n\r   Control of a TEA-capable pot is performed, as described in the base\n\r   HTCPCP specification, through the sending of BREW requests.  POST\n\r   requests are treated equivalently, but they remain deprecated.  Tea\n\r   production differs from coffee, however, in that a choice of teas is\n\r   often provided for client selection before the tea is brewed.  To\n\r   this end, a TEA-capable pot that receives a BREW message of content\n\r   type \"message/teapot\" MUST respond in accordance with the URI\n\r   requested, as below.\n\r\n\r2.1.1.  The \"/\" URI\n\r\n\r   For the URI \"/\", brewing will not commence.  Instead, an Alternates\n\r   header as defined in RFC 2295 [RFC2295] MUST be sent, with the\n\r   available tea bags and/or leaf varieties as entries.  An example of\n\r   such a response is as follows:\n\r\n\r      Alternates: {\"/darjeeling\" {type message/teapot}},\n\r                  {\"/earl-grey\" {type message/teapot}},\n\r                  {\"/peppermint\" {type message/teapot}}\n\r\n\r   The following example demonstrates the possibility of\n\r   interoperability of a TEA-capable pot that also complies with the\n\r   base HTCPCP specification:\n\r\n\r      Alternates: {\"/\" {type message/coffeepot}},\n\r                  {\"/pot-0/darjeeling\" {type message/teapot}},\n\r                  {\"/pot-0/earl-grey\" {type message/teapot}},\n\r                  {\"/pot-1/peppermint\" {type message/teapot}}\n\r\n\r   TEA-capable HTCPCP clients MUST check the contents of the Alternates\n\r   header returned by a BREW request, and provide a specific URI for\n\r   subsequent requests of the \"message/teapot\" type.\n\r\n\r\n\r\n\r\n\r\n\r\n\rNazar                         Informational                     [Page 3]\n\r\n\rRFC 7168                       HTCPCP-TEA                   1 April 2014\n\r\n\r\n\r   A request to the \"/\" URI with a Content-Type header of\n\r   \"message/coffeepot\" SHOULD also be responded to with an Alternates\n\r   header in the above format, to allow TEA-capable clients the\n\r   opportunity to present the selection of teas to the user if inferior\n\r   caffeinated beverages have initially been requested.\n\r\n\r2.1.2.  Variety-Specific URIs\n\r\n\r   TEA-capable pots follow the base HTCPCP specification when presented\n\r   with a BREW request for a specific variety of tea.  Pots SHOULD\n\r   follow the recommendations for brewing strength given by each\n\r   variety, and stop brewing when this strength is reached; it is\n\r   suggested that the strength be measured by detection of the opacity\n\r   of the beverage currently under brew by the pot.\n\r\n\r   TEA-capable clients SHOULD indicate the end of brewing by sending a\n\r   BREW request with an entity body containing \"stop\"; the pot MAY\n\r   continue brewing beyond the recommended strength until this is\n\r   received.  If the \"stop\" request is not sent by the client, this may\n\r   result in a state inversion in the proportion of tea to water in the\n\r   brewing pot, which may be reported by some pots as a negative\n\r   strength.\n\r\n\r   If a BREW command with an entity body containing \"stop\" is received\n\r   before the recommended strength is achieved, the pot MUST abort\n\r   brewing and serve the resultant beverage at lesser strength.  Finding\n\r   the preferred strength of beverage when using this override is a\n\r   function of the time between the TEA-capable pot receiving a \"start\"\n\r   request and the subsequent \"stop\".  Clients SHOULD be prepared to\n\r   make multiple attempts to reach the preferred strength.\n\r\n\r2.2.  Modified Header Fields\n\r\n\r   HTCPCP-TEA modifies the definition of one header field from the base\n\r   HTCPCP specification.\n\r\n\r2.2.1.  The Accept-Additions Header Field\n\r\n\r   It has been observed that some users of blended teas have an\n\r   occasional preference for teas brewed as an emulsion of cane sugar\n\r   with hints of water.  To allow for this circumstance, the Accept-\n\r   Additions header field defined in the base HTCPCP specification is\n\r   updated to allow the following options:\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\rNazar                         Informational                     [Page 4]\n\r\n\rRFC 7168                       HTCPCP-TEA                   1 April 2014\n\r\n\r\n\r      addition-type   = ( \"*\"\n\r                        | milk-type\n\r                        | syrup-type\n\r                        | sweetener-type\n\r                        | spice-type\n\r                        | alcohol-type\n\r                        | sugar-type\n\r                        ) *( \";\" parameter )\n\r      sugar-type      = ( \"Sugar\" | \"Xylitol\" | \"Stevia\" )\n\r\n\r   Implementers should be aware that excessive use of the Sugar addition\n\r   may cause the BREW request to exceed the segment size allowed by the\n\r   transport layer, causing fragmentation and a delay in brewing.\n\r\n\r2.3.  Response Codes\n\r\n\r   HTCPCP-TEA makes use of normal HTTP error codes and those defined in\n\r   the base HTCPCP specification.\n\r\n\r2.3.1.  300 Multiple Options\n\r\n\r   A BREW request to the \"/\" URI, as defined in Section 2.1.1, will\n\r   return an Alternates header indicating the URIs of the available\n\r   varieties of tea to brew.  It is RECOMMENDED that this response be\n\r   served with a status code of 300, to indicate that brewing has not\n\r   commenced and further options must be chosen by the client.\n\r\n\r2.3.2.  403 Forbidden\n\r\n\r   Services that implement the Accept-Additions header field MAY return\n\r   a 403 status code for a BREW request of a given variety of tea, if\n\r   the service deems the combination of additions requested to be\n\r   contrary to the sensibilities of a consensus of drinkers regarding\n\r   the variety in question.\n\r\n\r   A method of garnering and collating consensus indicators of the most\n\r   viable combinations of additions for each variety to be served is\n\r   outside the scope of this document.\n\r\n\r2.3.3.  418 I\"m a Teapot\n\r\n\r   TEA-capable pots that are not provisioned to brew coffee may return\n\r   either a status code of 503, indicating temporary unavailability of\n\r   coffee, or a code of 418 as defined in the base HTCPCP specification\n\r   to denote a more permanent indication that the pot is a teapot.\n\r\n\r\n\r\n\r\n\r\n\r\n\rNazar                         Informational                     [Page 5]\n\r\n\rRFC 7168                       HTCPCP-TEA                   1 April 2014\n\r\n\r\n\r3.  The \"message/teapot\" Media Type\n\r\n\r   To distinguish messages destined for TEA-capable HTCPCP services from\n\r   pots compliant with the base HTCPCP specification, a new MIME media\n\r   type is defined by this document.  The Content-Type header of a POST\n\r   or BREW request sent to a TEA-capable pot MUST be \"message/teapot\" if\n\r   tea is to be requested.\n\r\n\r4.  Environmental Considerations\n\r\n\r   As noted in Section 2.1, a BREW request with a Content-Type header\n\r   field of \"message/teapot\" to a TEA-capable pot will result in an\n\r   Alternates header being sent with the response, and a pot will not be\n\r   brewed.  However, if the BREW request has a Content-Type of\n\r   \"message/coffeepot\", and the pot is capable of brewing coffee, the\n\r   service\"s behavior will fall back to the base HTCPCP specification\n\r   and a pot will be brewed.\n\r\n\r   If the entity returned by the server when brewing commences contains\n\r   a TEA-compliant Alternates header indicating \"message/coffeepot\" and\n\r   the client does not want coffee, the client SHOULD then send a BREW\n\r   request with an entity body containing \"stop\".  This will result in\n\r   wasted coffee; whether this is regarded as a bad thing is user-\n\r   defined.\n\r\n\r   Such waste can be prevented by TEA-capable clients, by first\n\r   requesting a BREW of type \"message/teapot\" and then allowing\n\r   selection of an available beverage.\n\r\n\r5.  Security Considerations\n\r\n\r   As with the base HTCPCP specification, most TEA-capable pots are\n\r   expected to heat water through the use of electric elements, and as\n\r   such will not be in proximity to fire.  Therefore, no firewalls are\n\r   necessary for communication with these pots to proceed.\n\r\n\r   This extension does support communication with fired pots, however,\n\r   which may require heat retention and control policies.  Care should\n\r   be taken so that coal-fired pots and electrically heated kettles are\n\r   not connected to the same network, to prevent pots from referring to\n\r   any kettles on the network as darkened or otherwise smoke driven.\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\rNazar                         Informational                     [Page 6]\n\r\n\rRFC 7168                       HTCPCP-TEA                   1 April 2014\n\r\n\r\n\r6.  Acknowledgements\n\r\n\r   This extension to the HTCPCP specification would not be possible\n\r   without the base specification, and research on networked beverage\n\r   production leading up thereto.  In that vein, the author wishes to\n\r   acknowledge the sterling work of Larry Masinter in the development of\n\r   the leading protocol for coffee pot communication.\n\r\n\r   Many thanks also to Kevin Waterson and Pete Davis, for providing\n\r   guidance and suggestions during the drafting of this document.\n\r\n\r7.  References\n\r\n\r7.1.  Normative References\n\r\n\r   [KEYWORDS] Bradner, S., \"Key words for use in RFCs to Indicate\n\r              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\r\n\r7.2.  Informative References\n\r\n\r   [HTCPCP]   Masinter, L., \"Hyper Text Coffee Pot Control Protocol\n\r              (HTCPCP/1.0)\", RFC 2324, April 1 1998.\n\r\n\r   [RFC2295]  Holtman, K. and A. Mutz, \"Transparent Content Negotiation\n\r              in HTTP\", RFC 2295, March 1998.\n\r\n\rAuthor\"s Address\n\r\n\r   Imran Nazar\n\r   deviantART Inc.\n\r   7095 Hollywood Blvd\n\r   Hollywood, CA 90028\n\r\n\r   EMail: inazar@deviantart.com\n\r\n\rNazar                         Informational                     [Page 7]";
		return;
	}
	else {
		print "<p>错误的Flag</p>";
    }
}

?>

<html>
<head>
<title>Who Am I</title>
</head>
<body>
<h1>Who Am I</h1>
<ol>
  <li>「我是谁？」</li>
  <li>「我从哪里来？」</li>
  <li>「我将到哪里去？」</li>
  <li>人生是如此迷茫。</li>
</ol>

<form>
  <p>我是: <input type="text" name="key"/></p>
  <p><input type="submit" value="提交" /></p>
</form>
</body>
</html>